.\" Process this file with
.\" groff -man -Tascii ietd.conf.5
.\"
.TH "IETD.CONF" "5" "27 July 2005" "A. Lehmann, M. Zhang and A. Redlich" "File formats"
.SH "NAME"
/etc/ietd.conf \- configuration for iSCSI Enterprise Target Daemon
.SH "SYNOPSIS"
/etc/ietd.conf
.SH "DESCRIPTION"
/etc/ietd.conf contains configuration information for the
.B ietd (8)
command. This is the place, where you configure your iSCSI targets and daemon defaults.
.P
Only lines starting with `#' are ignored. Putting '#' in the middle of a line is disallowed. A line may be extended across multiple lines by making the last character a backslash.
.P
The "Yes" and "No" for parameter values are case sensitive. The parameter names are case insensitive.
.P
The file consists of a global part and zero or more "Target" stanzas. Everything until the first target definition belongs to the global configuration.

Here is an example:

IncomingUser joe secret
.br
OutgoingUser jack secret2

Target iqn.2001\-04.com.example:storage.disk2.sys1.xyz
    IncomingUser jim othersecret
    OutgoingUser james yetanothersecret
    Lun 0 Path=/dev/sdc,Type=fileio
    Lun 1 Blocks=10000,BlockSize=4096,Type=nullio
    Alias Test
    HeaderDigest None
    DataDigest None
    MaxConnections 1
    MaxSessions 0
    InitialR2T Yes
    ImmediateData No
    MaxRecvDataSegmentLength 8192
    MaxXmitDataSegmentLength 8192
    MaxBurstLength 262144
    FirstBurstLength 65536
    DefaultTime2Wait 2
    DefaultTime2Retain 0
    MaxOutstandingR2T 8
    NOPInterval 0
    NOPTimeout 0
    DataPDUInOrder Yes
    DataSequenceInOrder Yes
    ErrorRecoveryLevel 0
.P
Stanzas start with the word "Target" and the target name. This name must be a globally unique name, as defined by the iSCSI standard : the "iSCSI Qualified Name". The daemon brings the targets up in the order listed.
.SH "GLOBAL OPTIONS"
Global Options are case sensitive.
.TP
.B [IncomingUser <username> <password>]
The
.I <username>
and
.I <password>
used during discovery sessions to authenticate iSCSI initiators. Several of those can be specified for discovery. If no
.B IncomingUser
is specified, any initiator is allowed to open a discovery session.
.RS
HINT: RFC 3720 requires
.I <password>
to be 12 characters long. This is enforced e.g. by MS Initiator.
.RE
.TP
.B [OutgoingUser <username> <password>]
The
.I <username>
and
.I <password>
used during discovery sessions to authenticate the target to initiators. Only one outgoing
.I <username>/<password>
combination may be specified.
.RS
HINT: RFC 3720 requires
.I <password>
to be 12 characters long. This is enforced e.g. by MS Initiator.
.RE
.TP
.B Target iqn.<yyyy\-mm>.<tld.domain.some.host>[:<identifier>]
A target definition and the target name. The targets name (the
.B iSCSI Qualified Name
) must be a globally unique name (as defined by the iSCSI standard) and has to start with
.I iqn
followed by a single dot. The EUI\-64 form is not supported.
.I <yyyy\-mm>
is the date (year and month) at which the domain is valid. This has to be followed by a single dot and the reversed domain name.
The optional
.I <identifier>
\- which is freely selectable \- has to be separated by a single colon. For further details please check the iSCSI spec.

Here is an example:

Target iqn.2004\-07.com.example.host:storage.disk2.sys1.xyz
.SH "TARGET OPTIONS"
Target options are also case sensitive.
.TP
.B [IncomingUser <username> <password>]
The
.I <username>
and
.I <password>
used to authenticate the iSCSI initiators to this target. It may be different from the username and password in section GLOBAL OPTIONS, which is used for discovery. If you omit the
.B IncomingUser
Option, connections are allowed without authentication. A
.I <password>
has to be provided, if there is a
.I <username>
given. Specifying several different
.B IncomingUser
accounts is supported.
.TP
.B [OutgoingUser <username> <password>]
The
.I <username>
and
.I <password>
used to authenticate this iSCSI target to initiators. Only one
.B
OutgoingUser
per target is supported. It may be different from the username and password in section GLOBAL OPTIONS, which is used for discovery. A
.I <password>
has to be provided, if there is a
.I <username>
given.
.TP
.nf
.B Lun <lun> Type=(fileio|blockio),Path=<device>[,ScsiId=<scsi_id>][,ScsiSN=<scsi_sn>][,IOMode=(wb|ro|wt)][,BlockSize=<size>]
.TP
.B Lun <lun> Type=nullio[,Blocks=<count>][,BlockSize=<size>]
.fi
.RS
Parameters after <lun> should not contain any blank space characters except the first blank space after <lun> is needed.
.P
The value of
.I <lun>
can be from 0 to 16384. The first
.I <lun>
defined MUST be 0.
.P
In
.I fileio
mode (default), it defines a mapping between a "Logical Unit Number"
.I <lun>
and a given device
.I <device>
, which can be any block device (including regular block devices like hdX and sdX and virtual block devices like LVM and Software RAID devices) or regular files.
.P
In
.I blockio
mode, it defines a mapping between a "Logical Unit Number"
.I <lun>
and a given block device
.I <device>.
This mode will perform direct block i/o with the device, bypassing page-cache for all operations. This allows for efficient handling of non-aligned sector transfers (virtualized environments) and large block transfers (media servers). This mode works ideally with high-end storage HBAs and for applications that either do not need caching between application and disk or need the large block throughput.
.P
A
.I ScsiId
can be specified to assign a unique SCSI ID (VPD 0x83) to an iSCSI volume. This is used by initiator hosts to uniquely identify a SCSI volume. This is necessary with multipath\-aware hosts accessing the same
.I <device>
through multiple iSCSI sessions. The
.I <scsi_id>
must not exceed 16 characters.
.P
Also a
.I ScsiSN
can be specified to assign a unique serial number (VPD 0x80) to an iSCSI volume. This is used by certain initiator hosts (e.g. VMware ESX) to uniquely identify a SCSI volume. This is essential when used in conjunction with VMware ESX hosts accessing the same
.I <device>
through multiple iSCSI sessions. The
.I <scsi_sn>
must not exceed 16 characters.
.P
By default LUNs are writable, employing write-through caching. By setting
.I IOMode
to "ro" a LUN can be set to read only mode. Setting
.I IOMode
to "wb" will enable write-back caching of a LUN. Setting
.I IOMode
to "wt" is only symbolic as that is the default behavior.
.P
.B NOTE:
.I IOMode
"wb" is ignored when employing blockio as it performs no caching.
.P
.B WARNING: IOMode=wb could lead to serious data loss from an unexpected system failure (power loss, system crash). Use at your own risk!
.P
You can specify a logical
.I BlockSize
for an iSCSI volume. This
.I <size>
must be one of (512, 1024, 2048, 4096). If
.I BlockSize
isn't specified the default is 512 bytes for fileio, and the logical block size of the lower level device for blockio (which typically is 512 bytes).
.P
.B NOTE:
For blockio, you CANNOT specify a
.I BlockSize
less than the lower level device's logical block size which is the minimum size the device can handle. An error will be reported and the LUN will fail to attach if you try. You CAN use fileio though to export a LUN with a
.I BlockSize
less than the lower level device's logical block size.
.P
.B WARNING: Once your data is written at a given BlockSize you cannot change this BlockSize without risking corruption of your existing data.
.P
In
.I nullio
mode, it defines a mapping between a "Logical Unit Number"
.I <lun>
and an unnamed virtual device with a specified number of
.I Blocks
of
.I BlockSize
bytes. If
.I Blocks
is not specified then it will default to 64GB's worth given the curent
.I BlockSize
which defaults to 512 bytes. This is ONLY useful for performance measurement purposes. All writes to this virtual device will be discarded and all reads will return random data.
.P
.B WARNING: By sending random kernel memory over the IP network you can potentially expose sensitive information.
.RE
.TP
.B [Alias <aliasname>]
This assigns an optional
.I <aliasname>
to the target.
.TP
.B [HeaderDigest <CRC32C|None>]
Optional. If set to "CRC32C" and the initiator is configured accordingly, the integrity of an iSCSI PDU's header segments will be protected by a CRC32C checksum. The default is "None". Note that header digests are not supported during discovery sessions.
.TP
.B [DataDigest <CRC32C|None>]
Optional. If set to "CRC32C" and the initiator is configured accordingly, the integrity of an iSCSI PDU's data segment will be protected by a CRC32C checksum. The default is "None". Note that data digests are not supported during discovery sessions.
.TP
.B [MaxConnections <value>]
Optional. The number of connections within a session. Has to be set to "1" (in words: one), which is also the default since MC/S is not supported.
.TP
.B [MaxSessions <value>]
Optional. The maximum number of sessions for this target. If this is set to 0 (wich is the default) there is no explicit session limit.
.TP
.B [InitialR2T <Yes|No>]
Optional. If set to "Yes" (default), the initiator has to wait for the target to solicit SCSI data before sending it. Setting it to "No" allows the initiator to send a burst of
.B FirstBurstLength
bytes unsolicited right after and/or (depending on the setting of
.B ImmediateData
) together with the command. Thus setting it to "No" may improve performance.
.TP
.B [ImmediateData <Yes|No>]
Optional. This allows the initiator to append unsolicited data to a command. To achieve better performance, this should be set to "Yes". The default is "No".
.TP
.B [MaxRecvDataSegmentLength <value>]
Optional. Sets the maximum data segment length that can be received. The
.I <value>
should be set to multiples of PAGE_SIZE. Currently the maximum supported value is 64 * PAGE_SIZE, e.g. 262144 if PAGE_SIZE is 4kB. Configuring too large values may lead to problems allocating sufficient memory, which in turn may lead to SCSI commands timing out at the initiator host. The default value is 8192.
.TP
.B [MaxXmitDataSegmentLength <value>]
Optional. Sets the maximum data segment length that can be sent. The
.I <value>
actually used is the minimum of
.B MaxXmitDataSegmentLength
and the
.B MaxRecvDataSegmentLength
announced by the initiator. The
.I <value>
should be set to multiples of PAGE_SIZE. Currently the maximum supported value is 64 * PAGE_SIZE, e.g. 262144 if PAGE_SIZE is 4kB. Configuring too large values may lead to problems allocating sufficient memory, which in turn may lead to SCSI commands timing out at the initiator host. The default value is 8192.
.TP
.B [MaxBurstLength <value>]
Optional. Sets the maximum amount of either unsolicited or solicited data the initiator may send in a single burst. Any amount of data exceeding this value must be explicitly solicited by the target. The
.I <value>
should be set to multiples of PAGE_SIZE. Configuring too large values may lead to problems allocating sufficient memory, which in turn may lead to SCSI commands timing out at the initiator host. The default value is 262144.
.TP
.B [FirstBurstLength <value>]
Optional. Sets the amount of unsolicited data the initiator may transmit in the first burst of a transfer either with and/or right after the command, depending on the settings of
.B InitialR2T
and
.B ImmediateData
.
.I <value>
should be set to multiples of PAGE_SIZE. Configuring too large values may lead to problems allocating sufficient memory, which in turn may lead to SCSI commands timing out at the initiator host. The default value is 65536.
.TP
.B [DefaultTime2Wait <value>]
Currently not implemented, but can be used to set how long initiators wait before logging back in after a connection is logged out or dropped.
.TP
.B [DefaultTime2Retain <value>]
Currently we only support 0 which means sessions are not retained after the last connection is logged out or dropped.
.TP
.B [MaxOutstandingR2T <value>]
Optional. Controls the maximum number of data transfers the target may request at once, each of up to
.B MaxBurstLength
bytes. The default is 1.
.TP
.B [DataPDUInOrder <Yes|No>]
Optional. Has to be set to "Yes" \- which is also the default.
.TP
.B [DataSequenceInOrder <Yes|No>]
Optional. Has to be set to "Yes" \- which is also the default.
.TP
.B [ErrorRecoveryLevel <value>]
Optional. Has to be set to "0" (in words: zero), which is also the default.
.TP
.B [NOPInterval <value>]
Optional. If
.I value
is non-zero, the initiator will be "ping"ed during phases of inactivity (i.e. no data transfers) every
.I value
seconds to verify the connection is still alive. If the initiator fails to respond within
.B NOPTimeout
seconds, the connection will be closed.
.TP
.B [NOPTimeout <value>]
Optional. If a non-zero
.B NOPInterval
is used to periodically "ping" the initiator during phases of inactivity (i.e. no data transfers), the initiator must respond within
.I value
seconds, otherwise the connection will be closed. If
.I value
is set to zero or if it exceeds
.B NOPInterval
, it will be set to
.B NOPInterval.
.TP
.B [Wthreads <value>]
Optional. The iSCSI target employs several threads to perform the actual block I/O to the device. Depending on your hardware and your (expected) workload, the number of these threads may be carefully adjusted. The default value of 8 should be sufficient for most purposes.
.TP
.B [QueuedCommands <value>]
Optional. This parameter defines a window of commands an initiator may send and that will be buffered by the target. Depending on your hardware and your (expected) workload, the
.I value
may be carefully adjusted. The default value of 32 should be sufficient for most purposes.
.SH "KNOWN BUGS/LIMITATIONS"
Currently (as of 0.4.11) not all iSCSI target parameters are used. Header and data digests are not supported during discovery sessions.
.SH "SEE ALSO"
.B ietd (8)
.TP
You should have a look at
.B RFC 3720
for all the glory details.
